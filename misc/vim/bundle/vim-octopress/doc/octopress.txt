*octopress.txt*                                    *vim-octopress* *octopress*

Introduction                            |octopress-intro|
Default file format                     |octopress-default-format|
Textile support                         |octopress-textile|
Using Octopress syntax automatically    |octopress-autocmd|
The :Octopress command                  |:Octopress|
Using a custom 'rake' executable        |g:octopress_rake_executable|

                                                             *octopress-intro*
vim-octopress provides syntax support for Octopress posts (in Markdown or
Textile formats) and provides some Octopress rake tasks to run within Vim.

You can always find the latest code on GitHub:

https://github.com/tangledhelix/vim-octopress

                       *g:octopress_default_format* *octopress-default-format*
By default, Octopress will assume a file's base syntax is Markdown, unless:

  - The filename ends in .textile, which will switch to Textile mode
  - The buffer is unnamed and 'g:octopress_default_format' is 'textile'

Example:

    let g:octopress_default_format = 'textile'

The default format is 'markdown' unless otherwise specified.

                                                           *octopress-textile*
Though the default format is Markdown, Textile is supported as well. You
must install the Textile bundle yourself, since it is not included with
Vim (at least not as of version 7.3). You can get the Textile bundle at
either of the following locations:

    http://www.vim.org/scripts/script.php?script_id=2305

    https://github.com/timcharper/textile.vim

                                                           *octopress-autocmd*
To use this mode for your Octopress files, use an autocmd.

    autocmd BufNewFile,BufRead *.markdown,*.textile set filetype=octopress

Since Octopress is a superset of Markdown and Textile, it should not interfere
with non-Octopress Markdown and Textile files. It's also a superset of the
Jekyll syntax, so it should work fine for any pure Jekyll files you might have.

                                                                  *:Octopress*
The :Octopress command

:Octopress <task>

<task> is one of:

    new_post     Add a new post
    generate     Regenerate output files from sources
    deploy       Default deploy task
    gen_deploy   Generate and then deploy
    push         Deploy to GitHub Pages
    rsync        Deploy via rsync
    clean        Clean caches (pygments, gist, sass)

new_post is the only command that takes arguments. The rest of the line
after ':Octopress new_post' is considered to be the post title.

Note that due to a problem with rake's argument handling, a post title that
contains a comma will be truncated at the comma. I tried to work around this
using shell escapes and such, but it's a problem in rake itself, and is an
issue using the raw Octopress commands outside of Vim also.

imathis says this will not be a problem when they move to a CLI instead of
using rake.

                                                 *g:octopress_rake_executable*
By default, 'rake' is taken from your path. If you want to use a different
rake, specify its path in 'g:octopress_rake_executable'.

    let g:octopress_rake_executable = '/path/to/rake'

