[alias]

    a   = add                                           # Add
    aa  = add -A                                        # Add All
    ac  = !git add -A && git commit -m                  # Add and Commit
    ak  = config --global credential.helper osxkeychain # Auto Key (automatically update/use the saved credential)
    am  = commit --amend                                # Ammend commit message
    ar  = remote add                                    # Add Remote
    br  = branch                                        # Branch
    c   = commit -m                                     # Commit with Message
    co  = checkout                                      # Check Out
    cp  = cherry-pick                                   # Cherry Pick
    cro = remote set-url origin                         # Change remote origin
    d   = diff                                          # Difference
    g   = log --graph --pretty=custom                   # Graph
    l   = log --pretty=custom                           # Log
    p   = push                                          # Push
    rh  = reset --hard                                  # Reset Hard
    rs  = reset --soft                                  # Reset Soft
    rlc = !git reset --hard HEAD~1                      # Remove Last Commit
    ru  = clean -fd                                     # Remove Untracked
    st  = status                                        # Status
    ulc = reset --soft HEAD~1                           # Undo last commit

    # Cache credentials
    cc  = config --global credential.helper cache

    # Auto Upstream (automatically finds and sets upstream for the forked repo that's currently in)
    au = "!f() { \
        URL=$(git config --get remote.origin.url) && \
        REPO_NAME=$(basename $(basename $URL) .git) && \
        ORG_NAME=$(basename $(dirname $URL)) && \
        UPSTREAM=$(curl -X GET https://api.github.com/repos/$ORG_NAME/$REPO_NAME --silent | jq '.parent' | jq '.clone_url' | tr -d '\"') && \
        echo Adding ${UPSTREAM} as the upstream ... && \
        git remote add upstream $UPSTREAM; \
    }; f"

    # Credit an author on the latest commit
    credit = "!f() { \
        if [ -n \"$1\" ] && [ -n \"$2\" ]; then \
            git commit --amend --author \"$1 <$2>\" -C HEAD; \
        fi \
    }; f"

    # Update Personal (update config to personal account)
    up  = "!f() { \
        git config user.email terrytangyuan@gmail.com && \
        git config user.name terrytangyuan; \
    }; f"

    # Update Work (update config to work account)
    uw  = "!f() { \
        git config user.email yuan.tang@antfin.com && \
        git config user.name yuan.tang; \
    }; f"

    # Automatically finds and sets upstream for the forked repo that's currently in
    au = "!f() { \
        URL=$(git config --get remote.origin.url) && \
        REPO_NAME=$(basename $(basename $URL) .git) && \
        ORG_NAME=$(basename $(dirname $URL)) && \
        UPSTREAM=$(curl -X GET https://api.github.com/repos/$ORG_NAME/$REPO_NAME --silent | jq '.parent' | jq '.ssh_url' | tr -d '\"') && \
        echo Adding ${UPSTREAM} as the upstream ... && \
        git remote add upstream $UPSTREAM; \
    }; f"

    # Credit an author on the latest commit
    credit = "!f() { \
        if [ -n \"$1\" ] && [ -n \"$2\" ]; then \
            git commit --amend --author \"$1 <$2>\" -C HEAD; \
        fi \
    }; f"

    # Merge GitHub pull request on top of the `master` branch
    mpr = "!f() { \
        if [ $(printf \"%s\" \"$1\" | grep '^[0-9]\\+$' > /dev/null; printf $?) -eq 0 ]; then \
            git fetch origin refs/pull/$1/head:pr/$1 && \
            git rebase master pr/$1 && \
            git checkout master && \
            git merge pr/$1 && \
            git branch -D pr/$1 && \
            git commit --amend -m \"$(git log -1 --pretty=%B)\n\nClose #$1\"; \
        fi \
    }; f"

[color "branch"]
    current = green bold
    local = green
    remote = yellow

[color "diff"]
    frag = magenta
    meta = yellow
    new = green
    old = red

[color "status"]
    added = green reverse
    changed = yellow reverse
    untracked = red reverse

[core]
    editor = vim
    excludesfile = ~/.gitignore

[pretty]
    custom = "%C(magenta)%h%C(red)%d %C(yellow)%ar %C(green)%s %C(yellow)(%an)"
    #                     │        │            │            │             └─ author name
    #                     │        │            │            └─ message
    #                     │        │            └─ date (relative)
    #                     │        └─ decorations (branch, heads or tags)
    #                     └─ hash (abbreviated)

[user]
	name = terrytangyuan
	email = terrytangyuan@gmail.com

[credential]
	helper = osxkeychain
